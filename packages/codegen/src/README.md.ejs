<!-- DO NOT EDIT
This file is generated from gen-src/README.md.ejs. -->
<% const base = 'https://storage.googleapis.com/bigquery-runner/' -%>
# BigQuery Explorer

Fork of [minodisk/bigquery-runner](https://github.com/minodisk/bigquery-runner) with these changes:
- Added Scheduled Queries feature to view and track history of scheduled queries
- Renamed from BigQuery Runner to BigQuery Explorer (To publish to the marketplace)

I started this project because my daily workflow involves scheduled queries a lot and most BigQuery extensions did not cover the
features I needed. There are a lot of LLM-written code in this repository. I hope that does not turn around and bite me. Let me know if you
find any bugs or have any suggestions.

Future Ideas:
- Fix the issue with date handling in the scheduled query history.
- Improve the scheduled query history UI.
- Having the dry run feature constantly running and showing the results in the bottom left.

For all other features, see the original [minodisk/bigquery-runner](https://github.com/minodisk/bigquery-runner) repository.

![Preview](https://user-images.githubusercontent.com/514164/180352233-ed635538-f064-4389-814a-c3ec306aa832.gif)

## Authentication

This extension requires authentication to the Google Cloud API. You can get started by authenticating in one of the following two ways.

### Gcloud Credential ([Recommended](https://cloud.google.com/iam/docs/best-practices-service-accounts#development))

<!-- 1. [Install the gcloud CLI](https://cloud.google.com/sdk/docs/install).
1. Run `BigQuery Explorer: Login` in the VSCode command palette.
1. Set `bigqueryExplorer.projectId` in `setting.json`.

or -->

1. [Install the gcloud CLI](https://cloud.google.com/sdk/docs/install).
1. Run [`gcloud auth application-default login`](https://cloud.google.com/sdk/gcloud/reference/auth/application-default) in your terminal.
1. Set `bigqueryExplorer.projectId` in `setting.json`.

- Don't set `bigqueryExplorer.keyFilename` in `setting.json`.
- Don't set `GOOGLE_APPLICATION_CREDENTIALS` as an environment variable.

### Service Account Key

1. [Create a service account and its key](https://cloud.google.com/docs/authentication/getting-started).
    - Give the service account the necessary roles. Such as [`roles/bigquery.user`](https://cloud.google.com/bigquery/docs/access-control#bigquery.user) for example.
1. Tell the key path to this extension in one of the following two ways:
    - Set the path to the key `bigqueryExplorer.keyFilename` in `settings.json`.
    - [Set the path to the key as the environment variable `GOOGLE_APPLICATION_CREDENTIALS`](https://cloud.google.com/docs/authentication/getting-started#setting_the_environment_variable).

## Usage

1. Open a query file with `.bqsql` extension.
1. Open the command palette.
1. Run `BigQuery Explorer: Run`.

### Query parameters

If query has one or more named parameters, the extension will ask you for the values of that parameter. The values must be given in JSON format, e.g. quotation marks should be used for simple values such as `"20231224"`. See below for more complex examples.

Once set, the parameters are saved for future use and should be reset if necessary using the [bigqueryExplorer.clearParams](#bigquery-explorer-clear-parameters) command.

![Parameters usage](https://user-images.githubusercontent.com/514164/178248203-a24126dc-4ade-4e6f-93ae-200702edfa51.gif)

## Commands

<% contributes.commands.forEach((command) => { -%>
### <%- command.title %>

|ID|
|---|
|<%- command.command %>|

<%- command.description %>

<% }) -%>
## Configuration

The extension can be customized by modifying your `settings.json` file. The available configuration options, and their defaults, are below.

<% Object.keys(contributes.configuration.properties).forEach((property) => {
  const value = contributes.configuration.properties[property]
-%>
### `<%- property -%>`

|Type|Default|<% if (value.enum) { %>Enum|<% } %>
|---|---|<% if (value.enum) { %>---|<% } %>
|<%- Array.isArray(value.type) ? value.type.join(' &#x7C; ') : value.type %>|<%- JSON.stringify(value.default) %>|<% if (value.enum) { %><%- value.enum.map(JSON.stringify, JSON).join(' &#x7C; ') %>|<% } %>

<%- value.description -%>

<% if (value.screenshot) { -%>
![<%- property %>](<%- base %><%- value.screenshot %>)
<% } -%>

<% }) -%>

## Additional Settings

### Keyboard shortcuts

`keybindings.json`:

```json:keybindings.json
[
  {
    "key": "cmd+enter",
    "command": "bigqueryExplorer.run",
    "when": "resourceLangId in bigqueryExplorer.languageIds || resourceExtname in bigqueryExplorer.extensions"
  },
  {
    "key": "space h",
    "command": "bigqueryExplorer.prevPage",
    "when": "resourceLangId in bigqueryExplorer.languageIds || resourceExtname in bigqueryExplorer.extensions && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' || vim.mode == 'VisualLine'"
  },
  {
    "key": "space l",
    "command": "bigqueryExplorer.nextPage",
    "when": "resourceLangId in bigqueryExplorer.languageIds || resourceExtname in bigqueryExplorer.extensions && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' || vim.mode == 'VisualLine'"
  }
]
```

### Syntax highlighting `.bqsql` files as SQL

`settings.json`:

```json:settings.json
{
  "files.associations": {
    "*.bqsql": "sql"
  }
}
```

## License

Apache 2.0. This extension is forked from [google/vscode-bigquery](https://github.com/google/vscode-bigquery) via [minodisk/bigquery-runner](https://github.com/minodisk/bigquery-runner).
