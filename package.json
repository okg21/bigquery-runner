{
  "private": true,
  "name": "bigquery-explorer",
  "displayName": "BigQuery Explorer",
  "description": "Query BigQuery directly and view the results in VSCode.",
  "version": "1.21.14",
  "license": "Apache-2",
  "publisher": "okg21",
  "repository": {
    "type": "git",
    "url": "https://github.com/okg21/bigquery-runner.git"
  },
  "homepage": "https://marketplace.visualstudio.com/items?itemName=okg21.bigquery-explorer",
  "engines": {
    "vscode": "^1.79.1"
  },
  "workspaces": [
    "packages/codegen",
    "packages/core",
    "packages/extension",
    "packages/misc",
    "packages/shared",
    "packages/viewer"
  ],
  "categories": [
    "Other"
  ],
  "tags": [
    "bigquery",
    "sql",
    "runner",
    "query",
    "error"
  ],
  "main": "out/extension/index.js",
  "icon": "out/assets/icon.png",
  "activationEvents": [
    "workspaceContains:**/*.bqsql",
    "workspaceContains:**/*.bqddl",
    "workspaceContains:**/*.bqdml",
    "onLanguage:bigquery",
    "onLanguage:sql-bigquery",
    "onCommand:bigqueryExplorer.run",
    "onCommand:bigqueryExplorer.dryRun"
  ],
  "contributes": {
    "commands": [
      {
        "command": "bigqueryExplorer.login",
        "title": "BigQuery Explorer: Login",
        "description": "Login with `gcloud auth application-default login`."
      },
      {
        "command": "bigqueryExplorer.logout",
        "title": "BigQuery Explorer: Logout",
        "description": "Logout with `gcloud auth application-default revoke`."
      },
      {
        "command": "bigqueryExplorer.run",
        "title": "BigQuery Explorer: Run",
        "icon": "$(play)",
        "description": "Run the query in BigQuery and display the results. If text is selected, it will run the selected text as a query. If no text is selected, the entire file will be executed as a query."
      },
      {
        "command": "bigqueryExplorer.dryRun",
        "title": "BigQuery Explorer: Dry Run",
        "description": "Dry-run the query in BigQuery and display the result. If there is an error in the query, the wrong token of the query will be marked."
      },
      {
        "command": "bigqueryExplorer.prevPage",
        "title": "BigQuery Explorer: Previous Page",
        "description": "Fetch and display the results of the previous page."
      },
      {
        "command": "bigqueryExplorer.nextPage",
        "title": "BigQuery Explorer: Next Page",
        "description": "Fetch and display the results of the next page."
      },
      {
        "command": "bigqueryExplorer.focusOnLeftTab",
        "title": "BigQuery Explorer: Focus on Left Tab",
        "description": "Focus on the left tab in the viewer."
      },
      {
        "command": "bigqueryExplorer.focusOnRightTab",
        "title": "BigQuery Explorer: Focus on Right Tab",
        "description": "Focus on the right tab in the viewer."
      },
      {
        "command": "bigqueryExplorer.focusOnRowsTab",
        "title": "BigQuery Explorer: Focus on Rows Tab",
        "description": "Focus on the rows tab in the viewer."
      },
      {
        "command": "bigqueryExplorer.focusOnTableTab",
        "title": "BigQuery Explorer: Focus on Table Tab",
        "description": "Focus on the table tab in the viewer."
      },
      {
        "command": "bigqueryExplorer.focusOnSchemaTab",
        "title": "BigQuery Explorer: Focus on Schema Tab",
        "description": "Focus on the schema tab in the viewer."
      },
      {
        "command": "bigqueryExplorer.focusOnRoutineTab",
        "title": "BigQuery Explorer: Focus on Routine Tab",
        "description": "Focus on the routine tab in the viewer."
      },
      {
        "command": "bigqueryExplorer.focusOnJobTab",
        "title": "BigQuery Explorer: Focus on Job Tab",
        "description": "Focus on the job tab in the viewer."
      },
      {
        "command": "bigqueryExplorer.downloadAsJSONL",
        "title": "BigQuery Explorer: Download as JSON Lines",
        "description": "Run the query in BigQuery and save the results to a file in JSON Lines format"
      },
      {
        "command": "bigqueryExplorer.downloadAsJSON",
        "title": "BigQuery Explorer: Download as JSON",
        "description": "Run the query in BigQuery and save the results to a file in JSON format"
      },
      {
        "command": "bigqueryExplorer.downloadAsCSV",
        "title": "BigQuery Explorer: Download as CSV",
        "description": "Run the query in BigQuery and save the results to a file in CSV format"
      },
      {
        "command": "bigqueryExplorer.downloadAsMarkdown",
        "title": "BigQuery Explorer: Download as Markdown",
        "description": "Run the query in BigQuery and save the results to a file in Markdown format"
      },
      {
        "command": "bigqueryExplorer.downloadAsText",
        "title": "BigQuery Explorer: Download as Plain Text",
        "description": "Run the query in BigQuery and save the results to a file in plain text"
      },
      {
        "command": "bigqueryExplorer.refreshResources",
        "title": "BigQuery Explorer: Refresh Resources",
        "icon": "$(refresh)",
        "description": "Refresh the BigQuery Explorer's Resources"
      },
      {
        "command": "bigqueryExplorer.copyTableId",
        "title": "BigQuery Explorer: Copy Table ID",
        "description": "Copy the selected table ID to the clipboard"
      },
      {
        "command": "bigqueryExplorer.previewTableInVSCode",
        "title": "BigQuery Explorer: Preview Table in VS Code",
        "description": "Preview the selected table in VS Code"
      },
      {
        "command": "bigqueryExplorer.previewTableOnRemote",
        "title": "BigQuery Explorer: Preview Table on Remote",
        "description": "Preview the selected table in Google Cloud Console"
      },
      {
        "command": "bigqueryExplorer.copyFieldName",
        "title": "BigQuery Explorer: Copy Field Name",
        "description": "Copy the selected field name to the clipboard"
      },
      {
        "command": "bigqueryExplorer.clearParams",
        "title": "BigQuery Explorer: Clear Parameters",
        "description": "Clear the stored parameters for active text editor."
      },
      {
        "command": "bigqueryExplorer.clearAllParams",
        "title": "BigQuery Explorer: Clear All Parameters",
        "description": "Clear all stored parameters."
      },
      {
        "command": "bigqueryExplorer.refreshScheduledQueries",
        "title": "BigQuery Explorer: Refresh Scheduled Queries",
        "icon": "$(refresh)",
        "description": "Refresh the BigQuery Explorer's Scheduled Queries view"
      },
      {
        "command": "bigqueryExplorer.openScheduledSQL",
        "title": "BigQuery Explorer: Open Scheduled Query SQL",
        "description": "Open the SQL of a scheduled query in a new editor"
      },
      {
        "command": "bigqueryExplorer.viewScheduledQueryHistory",
        "title": "BigQuery Explorer: View Run History",
        "icon": "$(history)",
        "description": "View the run history of a scheduled query with performance details"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "bigqueryExplorer",
          "title": "BigQuery Explorer",
          "icon": "out/assets/icon-activity-bar.svg"
        }
      ]
    },
    "views": {
      "bigqueryExplorer": [
        {
          "id": "bigqueryExplorer.resources",
          "name": "Resources",
          "icon": "out/assets/icon-activity-bar.svg"
        },
        {
          "id": "bigqueryExplorer.scheduledQueries",
          "name": "Scheduled Queries",
          "icon": "out/assets/icon-activity-bar.svg"
        }
      ]
    },
    "menus": {
      "editor/title": [
        {
          "when": "resourceLangId in bigqueryExplorer.languageIds || resourceExtname in bigqueryExplorer.extensions && bigqueryExplorer.icon",
          "command": "bigqueryExplorer.run",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "bigqueryExplorer.refreshResources",
          "when": "view == bigqueryExplorer.resources",
          "group": "navigation"
        },
        {
          "command": "bigqueryExplorer.refreshScheduledQueries",
          "when": "view == bigqueryExplorer.scheduledQueries",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "bigqueryExplorer.copyTableId",
          "when": "view == bigqueryExplorer.resources && viewItem == table"
        },
        {
          "command": "bigqueryExplorer.previewTableInVSCode",
          "when": "view == bigqueryExplorer.resources && viewItem == table"
        },
        {
          "command": "bigqueryExplorer.previewTableOnRemote",
          "when": "view == bigqueryExplorer.resources && viewItem == table"
        },
        {
          "command": "bigqueryExplorer.copyFieldName",
          "when": "view == bigqueryExplorer.resources && viewItem == field"
        },
        {
          "command": "bigqueryExplorer.openScheduledSQL",
          "when": "view == bigqueryExplorer.scheduledQueries && viewItem == scheduledQuery",
          "group": "inline"
        },
        {
          "command": "bigqueryExplorer.viewScheduledQueryHistory",
          "when": "view == bigqueryExplorer.scheduledQueries && viewItem == scheduledQuery",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "BigQuery Explorer",
      "properties": {
        "bigqueryExplorer.keyFilename": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The path to the JSON file for the service account. If a relative path is specified, it is taken as a path relative to the root folder opened in VSCode. If not specified, the path specified by `GOOGLE_APPLICATION_CREDENTIALS` will be used."
        },
        "bigqueryExplorer.projectId": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Project ID for Google Cloud Platform. If not specified, the value of `project_id` in the JSON file of the service account will be used."
        },
        "bigqueryExplorer.location": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The geographic location of all datasets and jobs referenced and created through this extension. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location."
        },
        "bigqueryExplorer.useLegacySql": {
          "type": "boolean",
          "default": false,
          "description": "Flag whether to use legacy SQL. If `false`, use standard SQL."
        },
        "bigqueryExplorer.maximumBytesBilled": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Limits the bytes billed for this query. Queries with bytes billed above this limit will fail (without incurring a charge). Can be set in units, for example `200GB`. If unspecified, the project default is used."
        },
        "bigqueryExplorer.extensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".bqsql",
            ".bqddl",
            ".bqdml"
          ],
          "description": "List of file extensions for which the query is to be validated when the file is modified."
        },
        "bigqueryExplorer.languageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "bigquery",
            "sql-bigquery"
          ],
          "description": "List of [language identifiers](https://code.visualstudio.com/docs/languages/identifiers) of the files whose queries are to be validated when the files are modified."
        },
        "bigqueryExplorer.icon": {
          "type": "boolean",
          "default": true,
          "description": "Display GUI button to run on the editor title menu bar."
        },
        "bigqueryExplorer.defaultDataset.datasetId": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Specifies the default datasetId to assume for any unqualified table names in the query. If not set, all table names in the query string must be qualified in the format 'datasetId.tableId'."
        },
        "bigqueryExplorer.defaultDataset.projectId": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Specifies the default projectId to assume for any unqualified table names in the query. If `defaultDataset.datasetId` is not set, setting this value has no effect."
        },
        "bigqueryExplorer.downloader.csv.delimiter": {
          "type": "string",
          "default": ",",
          "description": "The delimiter for CSV. For example, if set to `\\t`, the output will be formatted as TSV."
        },
        "bigqueryExplorer.downloader.csv.header": {
          "type": "boolean",
          "default": false,
          "description": "The flag whether to add column names to CSV."
        },
        "bigqueryExplorer.downloader.rowsPerPage": {
          "type": [
            "number",
            "null"
          ],
          "default": 10000,
          "description": "Maximum number of rows to retrieve per page for downloading. If a number is specified, attempts to fetch that number of rows; if null is specified, attempts to fetch all results. If the amount of data per row is large, the specified number of rows will not always be fetched."
        },
        "bigqueryExplorer.tree.projectIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Array of projects for the datasets to be displayed in the tree view. If empty, only datasets in a project that have been authenticated will be displayed in the tree view."
        },
        "bigqueryExplorer.viewer.column": {
          "type": [
            "string",
            "number"
          ],
          "default": "+1",
          "description": "A string such as '+N', '-N' can be set to specify a position relative to the column where the query file is opened. Then, if you set a number greater than 1, the viewer will appear in the specified number of columns from the left. A number of -1 means the viewer will appear in the same column as the query file, and a number of -2 means the viewer will appear in the column farthest to the right."
        },
        "bigqueryExplorer.previewer.rowsPerPage": {
          "type": [
            "number",
            "null"
          ],
          "default": 100,
          "description": "Maximum number of rows to retrieve per page for preview. If a number is specified, attempts to fetch that number of rows; if null is specified, attempts to fetch all results. If the amount of data per row is large, the specified number of rows will not always be fetched."
        },
        "bigqueryExplorer.statusBarItem.align": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "enum": [
            "left",
            "right",
            null
          ],
          "description": "The alignment of the status bar item."
        },
        "bigqueryExplorer.statusBarItem.priority": {
          "type": [
            "number",
            "null"
          ],
          "default": null,
          "description": "The priority of status bar item. Higher value means the item should be shown more to the left."
        },
        "bigqueryExplorer.validation.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Validate the query whenever the file set in `languageIds` or `extensions` is modified."
        },
        "bigqueryExplorer.validation.debounceInterval": {
          "type": "number",
          "default": 600,
          "description": "Debounce interval in milliseconds to validate the query when the file is modified."
        },
        "bigqueryExplorer.viewer.rowsPerPage": {
          "type": [
            "number",
            "null"
          ],
          "default": 100,
          "description": "Maximum number of rows to retrieve per page for display in the viewer. If a number is specified, attempts to fetch that number of rows; if null is specified, attempts to fetch all results. If the amount of data per row is large, the specified number of rows will not always be fetched. You can use the `bigqueryExplorer.prevPage` or `bigqueryExplorer.nextPage` command to perform paging."
        }
      }
    }
  },
  "scripts": {
    "dev": "run-p dev:*",
    "dev:extension": "npm run -w extension dev",
    "dev:codegen": "npm run -w codegen dev",
    "dev:viewer": "npm run -w viewer dev",
    "lint": "run-p lint:*",
    "lint:core": "npm run -w core lint",
    "lint:extension": "npm run -w extension lint",
    "lint:shared": "npm run -w shared lint",
    "lint:viewer": "npm run -w viewer lint",
    "fix": "run-p fix:*",
    "fix:core": "npm run -w core fix",
    "fix:extension": "npm run -w extension fix",
    "fix:shared": "npm run -w shared fix",
    "fix:viewer": "npm run -w viewer fix",
    "check": "run-p check:*",
    "check:core": "npm run -w core check",
    "check:extension": "npm run -w extension check",
    "check:shared": "npm run -w shared check",
    "check:viewer": "npm run -w viewer check",
    "test": "npm run test-coverage",
    "test-coverage": "run-p test-coverage:*",
    "test-coverage:core": "npm run -w core test-coverage",
    "test-coverage:shared": "npm run -w shared test-coverage",
    "test-coverage:viewer": "npm run -w viewer test-coverage",
    "test-watch": "run-p test-watch:*",
    "test-watch:core": "npm run -w core test-watch",
    "test-watch:shared": "npm run -w shared test-watchAll",
    "test-watch:viewer": "npm run -w viewer test-watchAll",
    "build": "run-p build:*",
    "build:codegen": "npm run -w codegen build",
    "build:extension": "npm run -w extension build-production",
    "build:viewer": "npm run -w viewer build-production",
    "build:misc": "npm run -w misc build",
    "build-debug": "run-p build-debug:*",
    "build-debug:codegen": "npm run -w codegen build",
    "build-debug:extension": "npm run -w extension build-debug",
    "build-debug:viewer": "npm run -w viewer build-debug",
    "build-debug:misc": "npm run -w misc build",
    "debug": "run-s debug:build debug:package debug:install",
    "debug:build": "run-s clean:out build-debug",
    "debug:package": "npm run clean:dist && vsce package -o ./dist/bigquery-runner-debug.vsix",
    "debug:install": "code --force --install-extension ./dist/bigquery-runner-debug.vsix",
    "clean:out": "rimraf out && mkdirp out",
    "clean:dist": "rimraf dist && mkdirp dist"
  },
  "dependencies": {
    "@chakra-ui/icons": "^2.0.19",
    "@chakra-ui/react": "^2.7.1",
    "@google-cloud/bigquery": "^6.2.0",
    "bytes": "^3.1.2",
    "csv-stringify": "^6.4.0",
    "date-fns": "^2.30.0",
    "deepmerge": "^4.3.1",
    "easy-table": "^1.2.0",
    "ordinal": "^1.0.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "sql-formatter": "^11.0.2"
  },
  "devDependencies": {
    "@google-cloud/bigquery-data-transfer": "^5.0.1",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^14.0.0",
    "@testing-library/user-event": "^14.4.3",
    "@types/bytes": "^3.1.1",
    "@types/csv-stringify": "^3.1.0",
    "@types/easy-table": "^1.2.0",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.2",
    "@types/mkdirp": "^2.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.3.3",
    "@types/react": "^18.2.14",
    "@types/react-dom": "^18.2.6",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.79.1",
    "@types/vscode-webview": "^1.57.1",
    "@typescript-eslint/eslint-plugin": "^5.60.1",
    "@typescript-eslint/parser": "^5.60.1",
    "@vscode/test-electron": "^2.3.3",
    "cpx": "^1.5.0",
    "ejs": "^3.1.9",
    "esbuild": "^0.18.10",
    "eslint": "^8.44.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-config-react-app": "^7.0.1",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-sonarjs": "^0.19.0",
    "eslint-plugin-strict-dependencies": "^1.1.0",
    "eslint-plugin-unused-imports": "^2.0.0",
    "glob": "^10.3.1",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "jest-watch-typeahead": "^2.2.2",
    "mkdirp": "^3.0.1",
    "mocha": "^10.2.0",
    "nodemon": "^2.0.22",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.8.8",
    "react-app-polyfill": "^3.0.0",
    "react-dev-utils": "^12.0.1",
    "rimraf": "^5.0.1",
    "sinon": "^20.0.0",
    "ts-jest": "^29.1.1",
    "typescript": "^5.1.6",
    "vsce": "^2.15.0",
    "web-vitals": "^3.3.2"
  }
}
